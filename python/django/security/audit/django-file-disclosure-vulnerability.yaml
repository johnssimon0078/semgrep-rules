rules:
  - id: django-file-disclosure-vulnerability
    message: Constructing a FileResponse instance with user input could allow an
      attacker to download application binaries or view arbitrary files within
      protected directories.
    mode: taint
    pattern-sources:
      - pattern-either:
          - patterns:
              - pattern: $PATH = request.$METHOD['$PARAM']
              - pattern: $PATH = request.$METHOD.get('$PARAM')
              - pattern: $PATH = request.$METHOD.getlist('$PARAM')
              - pattern: |
                  $PARAMS = request.$METHOD.dict()
                  $PATH= $PARAMS.get('$PARAM')
              - pattern: $PATH = request.FILES['$PARAM']
              - pattern: |
                  $URLPATTERNS=[$PATH(...,$FUNC)]
          - pattern-inside: |
              def $FUNC(...,$PATH,...):
               ...
    pattern-sinks:
      - pattern-either:
          - pattern: FileResponse(open($PATH, $RW))
          - pattern: FileResponse($PATH)
    languages:
      - python
    severity: WARNING
    metadata:
      cwe:
        - CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path
            Traversal')
      references:
        - CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path
            Traversal')
        - https://cheatsheetseries.owasp.org/cheatsheets/File_Disclosure_Cheat_Sheet.html
        - CWE-494: https://nvd.nist.gov/vuln/detail/CVE-2022-36359
      category: security
      technology:
        - django
      subcategory: audit
      likelihood: HIGH
      impact: HIGH
      confidence: MEDIUM
      license: Commons Clause License Condition v1.0[LGPL-2.1-only]

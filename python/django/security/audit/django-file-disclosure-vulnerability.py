from django.http import FileResponse
from django.urls import path
import os

# Using regular expression capture groups in the URL patterns:
urlpatterns = [
    path('file/(?P<path>\w+)/', file_disclosure),
    ]

def file_disclosure(request,path):

    #Issue: The path variable is directly taken from user input without any validation
    if not path:
        return HttpResponseBadRequest("Invalid Request")

    abs_path = os.path.abspath(path)
    #Issue: Using os.path.abspath() does not prevent path traversal

    try:
        #Reading the file
        file = open(abs_path, 'rb')
        #Returning the file to client
        response = FileResponse(file)
        response['Content-Disposition'] = 'attachment; filename="{}"'.format(os.path.basename(abs_path))
        return response
    except:
        return HttpResponseNotFound("File not found")

# Using the request.GET.get() method:
def file_disclosure2(request):

    path = request.GET.get('path')
    #Issue: The path variable is directly taken from user input without any validation
    if not path:
        return HttpResponseBadRequest("Invalid Request")

    abs_path = os.path.abspath(path)
    #Issue: Using os.path.abspath() does not prevent path traversal

    try:
        #Reading the file
        file = open(abs_path, 'rb')
        #Returning the file to client
        response = FileResponse(file)
        response['Content-Disposition'] = 'attachment; filename="{}"'.format(os.path.basename(abs_path))
        return response
    except:
        return HttpResponseNotFound("File not found")


#No user controllable data is passed to the below method
def file_disclosure():

    path = '/dir/test.txt'
    #Issue: The path variable is directly taken from user input without any validation
    if not path:
        return HttpResponseBadRequest("Invalid Request")

    abs_path = os.path.abspath(path)
    try:
        #Reading the file
        # This wont match since there is no user controllable data
        response = FileResponse(file)
        response['Content-Disposition'] = 'attachment; filename="{}"'.format(os.path.basename(abs_path))
        return response
    except:
        return HttpResponseNotFound("File not found")
